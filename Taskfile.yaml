version: '3'

dotenv: ['.env']

tasks:

  clean:
    cmds:
      - find . -type f -name '*_string.go' -print0 | xargs -0 rm -vf 
      - find $PB_OUTPUT_DIR -type f -name '*.pb.go' -print0 | xargs -0 rm -vf 

  proto-gen:
    cmds:
      - >-
        docker run --user=$USER_ID
        -v {{.USER_WORKING_DIR}}:/defs
        namely/protoc-all -d $PB_INPUT_DIR --lint
        -o $PB_OUTPUT_DIR -l go --go-source-relative

  go-fmt:
    cmds:
      - cmd: gofumpt -l -w .
        ignore_error: true

  go-gen:
    cmds:
      - go generate ./...

  build:
    dotenv: ['.env']
    cmds:
      - task: clean
      - task: go-fmt
      - task: proto-gen
      - task: go-gen
      - >-
        go build
        -o bin/$PCAP_BIN_NAME
        {{if .VERBOSE}}-v -a{{end}}
        cmd/pcap.go
    sources:
      - ./**/*.go
    generates:
      - ./release/bin/pcap

  dist:
    cmds:
      - task: build
        vars:
          VERBOSE: true

  docker-build:
    cmds:
      - task: clean
      - task: proto-gen
      - >-
        docker buildx build
        --platform=linux/amd64
        --no-cache --file=Dockerfile
        --build-arg="BIN_NAME=$PCAP_BIN_NAME"
        --output={{.USER_WORKING_DIR}}/release
        --target=releaser {{.USER_WORKING_DIR}}
    sources:
      - ./**/*.go
    generates:
      - ./release/bin/pcap
